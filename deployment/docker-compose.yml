version: "3.7"

services:
    caddy: # https://hub.docker.com/_/caddy
        image: caddy:2-alpine
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
            - ./volumes/caddy/data/:/data/:rw
            - ./volumes/caddy/config/:/config/:rw
            - ./volumes/static/:/srv/static/:ro
            - ./volumes/media/:/srv/media/:ro
        environment:
            - HOSTNAME=${HOSTNAME:-localhost}
            - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-internal}

    for_runners:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        hostname: for_runners
        ports:
            - "8000"
        env_file: ./common.env
        environment:
            - DJANGO_SETTINGS_MODULE=docker_settings
            - HOSTNAME=${HOSTNAME:-localhost}
        links:
            - postgres:postgres
        depends_on:
            - postgres
            - caddy
        volumes:
            - ./for_runners/:/for_runners/
            - ./volumes/static/:/static/:rw
            - ./volumes/media/:/media/:rw
            # e.g.: pip cache must be the same value as $XDG_CACHE_HOME !
            - ./volumes/cache/:/var/cache/:rw
        entrypoint: /for_runners/entrypoint.sh

    postgres:
        # https://hub.docker.com/_/postgres
        image: postgres:11-alpine
        restart: unless-stopped
        hostname: postgres
        ports:
            - "5432"
        env_file: ./common.env
        environment:
            - POSTGRES_HOST_AUTH_METHOD=trust
        volumes:
            - ./postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
            - ./volumes/postgresql/data/:/var/lib/postgresql/data/:rw
